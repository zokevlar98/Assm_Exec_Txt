jmp lea cmp
lea cmp cmc
cmp cmc clc
cmc clc shrd
clc shrd mov
shrd mov movsx
mov movsx bswap
movsx bswap setl
bswap setl pushfd
setl pushfd pop
pushfd pop test
pop test shl
test shl mov
shl mov clc
mov clc stc
clc stc add
stc add xor
add xor jmp
xor jmp jmp
jmp jmp mov
jmp mov sar
mov sar mov
sar mov test
mov test lea
test lea clc
lea clc cmc
clc cmc mov
cmc mov btr
mov btr rol
btr rol lea
rol lea mov
lea mov cmc
mov cmc jmp
cmc jmp mov
jmp mov and
mov and ror
and ror mov
ror mov btr
mov btr lea
btr lea adc
lea adc shl
adc shl sub
shl sub shl
sub shl cwd
shl cwd mov
cwd mov mov
mov mov mov
mov mov pushfd
mov pushfd pop
pushfd pop lea
pop lea mov
lea mov cmp
mov cmp test
cmp test xor
test xor stc
xor stc test
stc test cmc
test cmc xor
cmc xor jmp
xor jmp jmp
jmp jmp mov
jmp mov cmc
mov cmc lea
cmc lea jmp
lea jmp jmp
jmp jmp ret
jmp ret pop
ret pop cmp
pop cmp sbb
cmp sbb cmp
sbb cmp int3
cmp int3 xor
int3 xor les
xor les add
les add push
add push push
push push mov
push mov xchg
mov xchg pop
xchg pop mov
pop mov sub
mov sub out
sub out ret
out ret call
ret call sub
call sub jl
sub jl pop
jl pop mov
pop mov test
mov test jge
test jge mov
jge mov jno
mov jno rcl
jno rcl test
rcl test in
test in dec
in dec fidiv
dec fidiv jmp
fidiv jmp xor
jmp xor push
xor push inc
push inc cmc
inc cmc stc
cmc stc pop
stc pop fbld
pop fbld pop
fbld pop test
pop test pop
test pop cmp
pop cmp push
cmp push insb
push insb cmp
insb cmp in
cmp in cmp
in cmp xor
cmp xor rcl
xor rcl push
rcl push outsb
push outsb imul
outsb imul std
imul std jno
std jno sbb
jno sbb push
sbb push enter
push enter jb
enter jb aaa
